@{
    ViewBag.Title = ":: Supplier information ::";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var permission = ViewData["Permission"] as PayRoll.Core.Utility.DBManager.Permission;
}

<link href="~/Content/kendo.common.min.css" rel="stylesheet" />

<script src="~/Scripts/kendo.all.min.js"></script>
@*<script src="~/Scripts/kendo.aspnetmvc.min.js"></script>*@
<script src="~/Scripts/Common.js"></script>

<div class="form-horizontal ">
    <fieldset class="content-group">
        @*<legend class="text-bold">Supplier Setup</legend>*@
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Supplier Id:</label>
                        <div class="col-lg-3">
                            <input type="text" id="txtSupplierId" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Account No:</label>
                        <div class="col-lg-3">
                            <input type="text" id="txtGLAccountNo" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Supplier Name:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtSupplierName" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Contact Person:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtContactPerson" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Contact Number:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtContactNumber" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Email Address:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtEmailAddress" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Mailing Address:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtMailingAddress" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Current Balance:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtCurrentBalance" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Due Balance:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtDueBalance" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        @*----------------------------Data Save Method-------------------------------*@

        <div class="form-group">
            <label class="control-label col-lg-2"> </label>
            <div class="col-lg-10">
                @if (permission.CanSave == "1")
                {
                    <button class="btn btn-info" data-style="expand-left" id="btnSave" type="button" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save</button>
                }
                @if (permission.CanUpdate == "1")
                {
                    <button class="btn bg-teal" data-style="expand-left" id="btnUpdate" type="button" onclick="Update()"><i class="fa fa-save"></i>&nbsp; Update</button>
                }
                @if (permission.CanDelete == "1")
                {
                    <button class="btn btn-danger" data-style="expand-left" id="btnDelete" type="button" onclick="Delete()"><i class="icon-trash"></i>&nbsp; Delete</button>
                }

            </div>
        </div>


    </fieldset>
    <fieldset class="content-group">
        @*<legend class="text-bold">Supplier List</legend>*@
        <div id="example">
            <div id="grid"></div>
        </div>
    </fieldset>
</div>

@section scripts
{
    <script type="text/javascript">
        _serverDate = null;

        $(document).ready(function () {
            $("#grid").kendoGrid().empty();
            var result = CallAjax_POST('GetSupplier/SupplierInfo', '', false, false)
            if (result.length > 0) {
                PopulateGridView(result);
            } else {
                alert("Error! Please Contact..");
            }

            function PopulateGridView(result) {
                //debugger;
                $("#grid").kendoGrid({
                    dataSource: result,
                    pageable: true,
                    filterable: true,
                    pageSize: 20,
                    pageable: true,
                    pageable: {
                        input: false,
                        numeric: true,
                        butonCount: 5,
                        pageSize: 20,
                        alwaysVisible: true,
                        previousNext: true,
                        serverPaging: true,
                        serverFiltering: true,
                    },
                    //height: 550,
                    // toolbar: ["create"],
                    selectable: true,
                    //toolbar: ["search"],//search commented on 20aug22
                    search: {
                        fields: [
                            { name: "SupplierId", operator: "eq" },
                            { name: "GLAccountNo", operator: "eq" },
                            { name: "SupplierName", operator: "contains" },

                        ]
                    },
                    columns: [

                        { field: "SupplierId", title: "Supplier Id", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "GLAccountNo", title: "Account No", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "SupplierName", title: "Supplier Name", filterable: true, filterable: { multi: true, search: true }, width: "120px" },
                        { field: "ContactNumber", title: "Contract Number", filterable: { multi: true, search: true }, width: "120px" },
                        { field: "EmailAddress", title: "Email Address", filterable: { multi: true, search: true }, width: "120px" },
                        { field: "CurrentBalance", title: "Current Balance", filterable: true, filterable: { multi: true, search: true }, width: "120px" },
                        { field: "DueBalance", title: "Due Balance", filterable: true, filterable: { multi: true, search: true }, width: "120px" },
                        { field: "Select ", title: "Action", filterable: false, width: "50px", template: "<button type='button' class='btn btn-success btn-sm' id='btnEdit'>Select</button>" }
                    ],

                });
            }
        });

    function FormDataAsObject() {
        var object = new Object();
        object.SupplierName = $('#txtSupplierName').val();
        object.GLAccountNo = $('#txtGLAccountNo').val();
        object.ContactPerson = $('#txtContactPerson').val();
        object.ContactNumber = $('#txtContactNumber').val();
        object.EmailAddress = $('#txtEmailAddress').val();
        object.MailingAddress = $('#txtMailingAddress').val();
        object.CurrentBalance = $('#txtCurrentBalance').val();
        object.DueBalance = $('#txtDueBalance').val();

        return object;
    }

    function ResetForm() {
        $('#txtSupplierName').val('');
        $('#txtGLAccountNo').val('');
        $('#txtContactPerson').val('');
        $('#txtContactNumber').val('');
        $('#txtEmailAddress').val('');
        $('#txtMailingAddress').val('');
        $('#txtCurrentBalance').val('');
        $('#txtDueBalance').val('');

        EnableDisableControls("1");
    }

    function EnableDisableControls(status) {
        if (status == "1") {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', true);
            $('#btnDelete').prop('disabled', true);
        }
        else if (status == "2") {
            $('#btnSave').prop('disabled', true);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }

        else {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }
    }

        function Save()
        {
            var object = FormDataAsObject();
            debugger;

            if (SupplierInfoValidation(object)) {

                $.ajax({
                    url: '@Url.Action("CreateOrUpdate", "SupplierInfo")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {
                        SupplierName: object.SupplierName,
                        GLAccountNo: object.GLAccountNo,
                        ContactPerson: object.ContactPerson,
                        ContactNumber: object.ContactNumber,
                        EmailAddress: object.EmailAddress,
                        MailingAddress: object.MailingAddress,
                        CurrentBalance: object.CurrentBalance,
                        DueBalance: object.DueBalance,

                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                            ResetForm();
                            //LoadUserInfoGrid();

                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);
                        }
                    },
                    error: function () {
                    }
                });
            }
        }

        @*function Update()
        {
            var formObject = FormDataAsObject();

            if (EmployeeInfoValidation(formObject)) {

                $.ajax({
                    url: '@Url.Action("Update", "UserInfo")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {
                        UserName: formObject.UserName,
                        UserFullName: formObject.UserFullName,
                        UserPassword: formObject.UserPassword,
                        UserRoleId: formObject.UserRoleId,
                        UserStatusId: formObject.UserStatus,
                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                            ResetForm();
                            LoadUserInfoGrid();

                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);

                        }
                    },
                    error: function () {

                    }
                });

            }

        }*@

        @*function Delete()
        {
            var formObject = FormDataAsObject();

            $.ajax({
                url: '@Url.Action("Delete", "UserInfo")',
                method: 'post',
                dataType: 'json',
                async: false,
                data: {
                    userName: formObject.UserName,
                },
                success: function (data) {
                    var vmMsg = data;
                    if (vmMsg.MessageType == 1) {
                        ShowNotification(1, vmMsg.ReturnMessage);
                        ResetForm();
                        LoadUserInfoGrid();

                    } else {
                        ShowNotification(3, vmMsg.ReturnMessage);

                    }
                },
                error: function () {
                }
            });

        }*@

        function SupplierInfoValidation(formObject) {

            if (!formObject.SupplierName) {
                $('#txtSupplierName').focus();
                ShowNotification('2', 'Supplier Name Name Can not be empty.');
                return false;
            }

            if (!formObject.ContactPerson) {
                $('#txtContactPerson').focus();
                ShowNotification('2', 'Contact Person No Can not be empty.');
                return false;
            }

            if (!formObject.ContactNumber) {
                $('#txtContactNumber').focus();
                ShowNotification('2', 'Contact Number ID Can not be empty.');
                return false;
            }
            if (!formObject.EmailAddress) {
                $('#txtEmailAddress').focus();
                ShowNotification('2', 'Email Address Can not be empty.');
                return false;
            }
            if (!formObject.MailingAddress) {
                $('#txtMailingAddress').focus();
                ShowNotification('2', 'Mailing Address Can not be empty.');
                return false;
            }

            return true;
        }

    </script>

}

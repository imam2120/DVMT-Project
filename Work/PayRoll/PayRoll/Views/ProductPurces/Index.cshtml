@{
    ViewBag.Title = ":: Product Purchase Information ::";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var permission = ViewData["Permission"] as PayRoll.Core.Utility.DBManager.Permission;
}

<link href="~/Content/kendo.common.min.css" rel="stylesheet" />

<script src="~/Scripts/kendo.all.min.js"></script>
@*<script src="~/Scripts/kendo.aspnetmvc.min.js"></script>*@
<script src="~/Scripts/Common.js"></script>

<div class="form-horizontal ">
    <fieldset class="content-group">
        @*<legend class="text-bold">Product Setup</legend>*@
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Product Name:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlProductName" name="ddlProductName"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Opening Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtOpeningBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Supplier:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlSuplier" name="ddlSuplier"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Supplier Due Amount:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtDueAmountToSuplier" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Balance Purces:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtBalancePurces" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Prod. Current Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtCurrentBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">By Cash:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtCashAmount" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">By Bank:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtBankAmount" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <input type="text" id="txtLastTransNo" hidden ="hidden" class="form-control">
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Due Amount:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtDueAmount" readonly ="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*----------------------------Data Save Method-------------------------------*@


        <div class="form-group">
            <label class="control-label col-lg-2"> </label>
            <div class="col-lg-10">
                @if (permission.CanSave == "1")
                {
                    <button class="btn btn-info" data-style="expand-left" id="btnSave" type="button" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save</button>
                }
                @if (permission.CanUpdate == "1")
                {
                    <button class="btn bg-teal" data-style="expand-left" id="btnUpdate" type="button" onclick="Update()"><i class="fa fa-save"></i>&nbsp; Update</button>
                }
                @if (permission.CanDelete == "1")
                {
                    <button class="btn btn-danger" data-style="expand-left" id="btnDelete" type="button" onclick="Delete()"><i class="icon-trash"></i>&nbsp; Delete</button>
                }
            </div>
        </div>
    </fieldset>

    <fieldset class="content-group">        
        <div id="example">
            <div id="grid"></div>
        </div>
    </fieldset>
</div>

@section scripts
{
    <script type="text/javascript">
        _serverDate = null;

        $(document).ready(function () {
            LoadProduct();
            LoadSupplier(); 
            GetLastTransaction();
        });

    function FormDataAsObject() {
        var object = new Object();
        object.TransNo = $('#txtLastTransNo').val();
        object.ProductAccNo = $('#ddlProductName').find(':selected').val();
        object.OpeningBalance = $('#txtOpeningBalance').val();
        object.SupAccNo = $('#ddlSuplier').find(':selected').val();
        object.SupDueAmount = $('#txtDueAmountToSuplier').val();
        object.PurcesAmount = $('#txtBalancePurces').val();
        object.ClosingBalance = $('#txtCurrentBalance').val();
        object.ByCashAmount = $('#txtCashAmount').val();
        object.ByBankAmount = $('#txtBankAmount').val();
        object.DueAmount = $('#txtDueAmount').val();          

        return object;
    }

    function ResetForm() {
        $('#txtLastTransNo').val('');
        $('#ddlProductName').prop('selectedIndex', 0);
        $('#txtOpeningBalance').val('');
        $('#ddlSuplier').prop('selectedIndex', 0);
        $('#txtDueAmountToSuplier').val('');
        $('#txtBalancePurces').val('');
        $('#txtCurrentBalance').val('');
        $('#txtCashAmount').val('');
        $('#txtBankAmount').val('');
        $('#txtDueAmount').val('');      

        EnableDisableControls("1");
    }

    function EnableDisableControls(status) {
        if (status == "1") {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', true);
            $('#btnDelete').prop('disabled', true);
        }
        else if (status == "2") {
            $('#btnSave').prop('disabled', true);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }

        else {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }
    }

        function Save()
        {
            var object = FormDataAsObject();
            debugger;

            if (ProductPurchaseValidation(object)) {

                $.ajax({
                    url: '@Url.Action("CreateOrUpdate", "ProductPurces")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {
                        TransNo: object.TransNo,
                        ProductAccNo: object.ProductAccNo,
                        OpeningBalance: object.OpeningBalance,
                        SupAccNo: object.SupAccNo,
                        SupDueAmount: object.SupDueAmount,
                        PurcesAmount: object.PurcesAmount,
                        ClosingBalance: object.ClosingBalance,
                        ByCashAmount: object.ByCashAmount,
                        ByBankAmount: object.ByBankAmount,
                        DueAmount: object.SupDueAmount,              
                        
                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                            ResetForm();
                            //LoadUserInfoGrid();
                            GetLastTransaction();
                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);
                        }
                    },
                    error: function () {
                    }
                });
            }
        }

        function ProductPurchaseValidation(formObject) {

            var dueAmt = parseInt($('#txtDueAmount').val());

            if (dueAmt < 0) {

                ShowNotification('2', 'Balance can not be negative!.');
                return false;
            };
                

            //if (!formObject.EmployeeName) {
            //    $('#txtEmployeeName').focus();
            //    ShowNotification('2', 'Employee Name Can not be empty.');
            //    return false;
            //}

            //if (!formObject.ContractNumber) {
            //    $('#txtContractNumber').focus();
            //    ShowNotification('2', 'Contract No Can not be empty.');
            //    return false;
            //}

            //if (!formObject.NationalId) {
            //    $('#txtNationalId').focus();
            //    ShowNotification('2', 'National ID Can not be empty.');
            //    return false;
            //}
            //if (!formObject.DeptId) {
            //    $('#ddlDesignation').focus();
            //    ShowNotification('2', 'Department Can not be empty.');
            //    return false;
            //}
            //if (!formObject.PresentAddress) {
            //    $('#txtPresentAddress').focus();
            //    ShowNotification('2', 'Present Address Can not be empty.');
            //    return false;
            //}

            //if (!formObject.PermanentAddress) {
            //    $('#txtPermanentAddress').focus();
            //    ShowNotification('2', 'Permanent Address Can not be empty.');
            //    return false;
            //}


            return true;
        }

        function GetLastTransaction() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/ProductPurces/GetLastTransaction",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtLastTransNo").val(data);
                    $("#txtLastTransNo").hide();
                }
            });

        }
       
        function LoadProduct() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/ProductPurces/LoadProductName",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlProductName").empty();
                    $("#ddlProductName").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {                       
                        $("#ddlProductName").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });
           
        }

        function LoadSupplier() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/ProductPurces/LoadSupplierName",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlSuplier").empty();
                    $("#ddlSuplier").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {                        
                        $("#ddlSuplier").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });
            
        }

        $('#ddlProductName').on('change', function () {        
            debugger;
            //alert($(this).find(':selected').val());            
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/ProductPurces/LoadProductBalance?ProductId=" + $(this).find(':selected').val(),
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtOpeningBalance").val(data);
                }
            });
        });

        $('#ddlSuplier').on('change', function () {
            debugger;
            //alert($(this).find(':selected').val());
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/ProductPurces/GetSuplierBalance?SuplierId=" + $(this).find(':selected').val(),
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtDueAmountToSuplier").val(data);
                }
            });
        });

        
        $('#txtBalancePurces').on('input', function () {

            $('#txtCashAmount').val('');
            $('#txtDueAmount').val('');

            var a = parseInt($('#txtBalancePurces').val());
            var b = parseInt($('#txtDueAmountToSuplier').val());                  

            $('#txtCurrentBalance').val(a + b);

        });

        $('#txtCashAmount').on('input', function () {

            $('#txtBankAmount').val('');
            $('#txtDueAmount').val('');

            var a = parseInt($('#txtBalancePurces').val());
            var b = parseInt($('#txtCashAmount').val());

            $('#txtDueAmount').val(a - b);

        });

        $('#txtBankAmount').on('input', function () {

            var a = parseInt($('#txtBalancePurces').val());
            var b = parseInt($('#txtCashAmount').val());
            var c = parseInt($('#txtBankAmount').val());

            $('#txtDueAmount').val(a - (b + c));

        });


    </script>

}

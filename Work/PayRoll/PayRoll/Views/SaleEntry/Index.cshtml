@{
    ViewBag.Title = ":: Sale Entry ::";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var permission = ViewData["Permission"] as PayRoll.Core.Utility.DBManager.Permission;
}

<link href="~/Content/kendo.common.min.css" rel="stylesheet" />

<script src="~/Scripts/kendo.all.min.js"></script>
@*<script src="~/Scripts/kendo.aspnetmvc.min.js"></script>*@
<script src="~/Scripts/Common.js"></script>

<div class="form-horizontal ">
    <fieldset class="content-group">
        @*<legend class="text-bold">Product Setup</legend>*@
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Product Name:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlProductName" name="ddlProductName"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Total Product Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtProdWiseTargetAmt" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Employee:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlEmployee" name="ddlEmployee"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Total Target:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtTargetAmount" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Total Sale:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtBalanceSale" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Target Pending:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtTargetPending" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">By Cash:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtCashAmount" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">By Bank:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtBankAmount" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Customer:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlCustomer" name="ddlCustomer"></select>
                        </div>
                    </div>
                    <input type="text" id="txtLastTransNo" hidden="hidden" class="form-control">
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Due Amount:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtDueAmount" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*----------------------------Data Save Method-------------------------------*@

        <div class="col-lg-12">
            <div class="col-lg-6">
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label class="control-label col-lg-2"> </label>
                    <div class="col-lg-12">
                        @if (permission.CanSave == "1")
                        {
                            <button class="btn btn-info" data-style="expand-left" id="btnSave" type="button" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save</button>
                        }
                        @if (permission.CanUpdate == "1")
                        {
                            <button class="btn bg-teal" data-style="expand-left" id="btnUpdate" type="button" onclick="Update()"><i class="fa fa-save"></i>&nbsp; Update</button>
                        }
                        @if (permission.CanDelete == "1")
                        {
                            <button class="btn btn-danger" data-style="expand-left" id="btnDelete" type="button" onclick="Delete()"><i class="icon-trash"></i>&nbsp; Delete</button>
                        }
                    </div>
                </div>
            </div>
        </div>

    </fieldset>

    <fieldset class="content-group">
        <div id="example">
            <div id="grid"></div>
        </div>
    </fieldset>
</div>

@section scripts
{
    <script type="text/javascript">
        _serverDate = null;

        $(document).ready(function () {
            LoadProduct();
            LoadEmployee();
            LoadCustomer();
            GetLastTransaction();
        });

        function FormDataAsObject() {
        var object = new Object();

            object.TransNo = $('#txtLastTransNo').val();
            object.ProductCode = $('#ddlProductName').find(':selected').val();
            object.EmpAccNo = $('#ddlEmployee').find(':selected').val();
            object.TargetAmount = $('#txtTargetAmount').val();
            object.SaleAmount = $('#txtBalanceSale').val();
            object.PendingAmount = $('#txtTargetPending').val();
            object.ByCashAmount = $('#txtCashAmount').val();
            object.ByBankAmount = $('#txtBankAmount').val();
            object.DueAmount = $('#txtDueAmount').val();
            object.CusAccNo = $('#ddlCustomer').find(':selected').val();
            object.CurrBalance = 0;

            return object;
        
    }

        function ResetForm() {

            $('#ddlEmployee').prop('selectedIndex', 0);
            $('#txtTargetAmount').val('');
            $('#ddlProductName').prop('selectedIndex', 0);
            $('#txtProdWiseTargetAmt').val('');
            $('#txtBalanceSale').val('');
            $('#txtTargetPending').val('');
            $('#txtCashAmount').val('');
            $('#txtBankAmount').val('');
            $('#txtDueAmount').val('');
            $('#ddlCustomer').prop('selectedIndex', 0);
            $('#txtLastTransNo').val('');

            EnableDisableControls("1");
    }

    function EnableDisableControls(status) {
        if (status == "1") {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', true);
            $('#btnDelete').prop('disabled', true);
        }
        else if (status == "2") {
            $('#btnSave').prop('disabled', true);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }

        else {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }
    }

        function Save()
        {
            var object = FormDataAsObject();
            debugger;

            if (ProductPurchaseValidation(object)) {

                $.ajax({
                    url: '@Url.Action("CreateOrUpdate", "SaleEntry")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {

                        TransNo: object.TransNo,
                        ProductCode: object.ProductCode,
                        EmpAccNo: object.EmpAccNo,
                        TargetAmount: object.TargetAmount,
                        SaleAmount: object.SaleAmount,
                        PendingAmount: object.PendingAmount,
                        ByCashAmount: object.ByCashAmount,
                        ByBankAmount: object.ByBankAmount,
                        DueAmount: object.DueAmount,
                        CusAccNo: object.CusAccNo,
                        CurrBalance: object.CurrBalance,
                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                            ResetForm();
                            //LoadUserInfoGrid();
                            GetLastTransaction();
                            LoadEmployee();
                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);
                        }
                    },
                    error: function () {
                    }
                });
            }
        }

        function ProductPurchaseValidation(formObject) {

            var dueAmt = parseInt($('#txtDueAmount').val());

            if (dueAmt < 0) {

                ShowNotification('2', 'Balance can not be negative!.');
                return false;
            };

            return true;
        }

        function GetLastTransaction() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/SaleEntry/GetLastTransaction",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtLastTransNo").val(data);
                    $("#txtLastTransNo").hide();
                }
            });

        }

        function LoadProduct() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/SaleEntry/LoadProductName",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlProductName").empty();
                    $("#ddlProductName").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {
                        $("#ddlProductName").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });

        }

        function LoadEmployee() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/SaleEntry/LoadEmployeeName",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlEmployee").empty();
                    $("#ddlEmployee").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {
                        $("#ddlEmployee").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });

        }

        function LoadCustomer() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/SaleEntry/LoadCustomerName",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlCustomer").empty();
                    $("#ddlCustomer").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {
                        $("#ddlCustomer").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });

        }

        $('#ddlProductName').on('change', function () {
            debugger;
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/SaleEntry/LoadProductBalance?ProductId=" + $(this).find(':selected').val(),
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    
                    $("#txtProdWiseTargetAmt").val(data);
                    
                }
            });
        });

        $('#ddlEmployee').on('change', function () {
            debugger;
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/SaleEntry/GetEmployeeTarget?TransNo=" + $(this).find(':selected').val(),
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtTargetAmount").val(data);
                }
            });
        });


        $('#txtBalanceSale').on('input', function () {

            $('#txtCashAmount').val('');
            $('#txtDueAmount').val('');

            var a = parseInt($('#txtBalanceSale').val());
            var b = parseInt($('#txtTargetAmount').val());

            $('#txtTargetPending').val(b - a);

        });

        $('#txtCashAmount').on('input', function () {

            $('#txtBankAmount').val('0');
            $('#txtDueAmount').val('');

            var a = parseInt($('#txtBalanceSale').val());
            var b = parseInt($('#txtCashAmount').val());

            $('#txtDueAmount').val(a - b);

        });

        $('#txtBankAmount').on('input', function () {

            var a = parseInt($('#txtBalanceSale').val());
            var b = parseInt($('#txtCashAmount').val());
            var c = parseInt($('#txtBankAmount').val());

            $('#txtDueAmount').val(a - (b + c));

        });


    </script>

}

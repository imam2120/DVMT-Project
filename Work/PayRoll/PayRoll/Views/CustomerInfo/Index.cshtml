@{
    ViewBag.Title = ":: Customer information ::";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var permission = ViewData["Permission"] as PayRoll.Core.Utility.DBManager.Permission;
}

<script id="templateUserIndoModal" type="text/html">
    <table class="table table-bordered table-striped table-hover datatable-sorting" id="UserInfoDataTableModal">
        <thead class="ruhee">
        <th>Customer ID</th>
        <th>Customer Name</th>
        <th>National ID</th>
        <th>CustomerGLAC</th>
        <th>Balance</th>
        <th>Action</th>
        </thead>
        <tbody>
            {{#EmployeeInfoSearch}}

            <tr>
                <td> {{UserFullName}}</td>
                <td> {{UserName}}</td>
                <td> {{UserRole.RoleName}}</td>
                <td> {{UserStatus.StatusName}}</td>
                <td class="action-sm">
                    <a class="btn btn-default btn-rounded btn-sm" onclick="OnSelectUser('{{UserName}}')"><i class="icon-select2"></i> Select</a>
                </td>
            </tr>

            {{/EmployeeInfoSearch}}
        </tbody>
    </table>
</script>

<div class="form-horizontal ">
    <fieldset class="content-group">
        <legend class="text-bold">Customer Setup</legend>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Customer Id:</label>
                        <div class="col-lg-3">
                            <input type="text" id="txtCustomerId" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">CustomerGLAC:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtCustomerGLAC" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Balance:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtCustomerBalance" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Customer Name:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtCustomerName" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Contract Number:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtContractNumber" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Emergency Number:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtEmergencyNumber" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">National ID:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtNationalId" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Present Address:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtPresentAddress" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Permanent Address:</label>
                        <div class="col-lg-9">
                            <input type="text" id="txtPermanentAddress" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>

        @*----------------------------Data Save Method-------------------------------*@

        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">

                </div>
                <div class="col-lg-6">

                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-lg-2"> </label>
            <div class="col-lg-10">
                @*@if (permission.CanSave == "1")
                    {
                        <button class="btn btn-info" data-style="expand-left" id="btnSave" type="button" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save</button>
                    }
                    @if (permission.CanUpdate == "1")
                    {
                        <button class="btn bg-teal" data-style="expand-left" id="btnUpdate" type="button" onclick="Update()"><i class="fa fa-save"></i>&nbsp; Update</button>
                    }
                    @if (permission.CanDelete == "1")
                    {
                        <button class="btn btn-danger" data-style="expand-left" id="btnDelete" type="button" onclick="Delete()"><i class="icon-trash"></i>&nbsp; Delete</button>
                    }*@

                <button class="btn btn-info" data-style="expand-left" id="btnSave" type="button" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save</button>

                <button class="btn bg-teal" data-style="expand-left" id="btnUpdate" type="button" onclick="Update()"><i class="fa fa-save"></i>&nbsp; Update</button>

                <button class="btn btn-danger" data-style="expand-left" id="btnDelete" type="button" onclick="Delete()"><i class="icon-trash"></i>&nbsp; Delete</button>

                <button class="btn btn-w-m btn-success btn-loading" type="button" id="btnReset" onclick="ResetForm()"><i class="glyphicon glyphicon-refresh"></i>&nbsp;Reset</button>
            </div>
        </div>


    </fieldset>


    <fieldset class="content-group">
        <legend class="text-bold">Customer List</legend>
        <div id="divInfo">

            <div class="form-group">
                <div class="table-responsive" id="div-userInfo">
                </div>
            </div>

        </div>

    </fieldset>

</div>

@section scripts
{
    <script type="text/javascript">
        _serverDate = null;
        $(document).ready(function () {
            //LoadCombos();
            //LoadUserInfoGrid();
            //EnableDisableControls("1");

        });


        @*function LoadUserInfoGrid() {
            var url = '@Url.Action("GetEmployee", "EmployeeInfo")';

            $.ajax({
                url: url,
                method: 'get',
                success: function (res) {
                    var templateWithData = Mustache.to_html($("#templateUserIndoModal").html(), { UserInfoSearch: res });
                    $("#div-userInfo").empty().html(templateWithData);
                    MakePagination('UserInfoDataTableModal');

                },
                error: function () {

                }
            });


        }*@


    function FormDataAsObject() {
        var object = new Object();
        object.Name = $('#txtCustomerName').val();
        object.ContractNumber = $('#txtContractNumber').val();
        object.NID = $('#txtNationalId').val();
        object.EmergencyNumber = $('#txtEmergencyNumber').val();
        object.PresentAddress = $('#txtPresentAddress').val();
        object.PermanentAddress = $('#txtPermanentAddress').val();

        return object;
    }

    function ResetForm() {
        $('#txtCustomerName').val('');
        $('#txtContractNumber').val('');
        $('#txtNationalId').val('');
        $('#txtEmergencyNumber').val('');
        $('#txtPresentAddress').val('');
        $('#txtPermanentAddress').val('');

        EnableDisableControls("1");
    }

    function EnableDisableControls(status) {
        if (status == "1") {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', true);
            $('#btnDelete').prop('disabled', true);
        }
        else if (status == "2") {
            $('#btnSave').prop('disabled', true);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }

        else {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }
    }



    @*function OnSelectUser(userName) {

        $.ajax({
            url: '@Url.Action("GetAUser", "UserInfo")',
            type: 'get',
            dataType: 'json',
            async: false,
            data: {
                userName: userName
            },
            success: function (data) {
                ResetForm();
                $('#txtUserName').val(data.UserName);
                $('#txtUserFullName').val(data.UserFullName);
                $('#txtUserPassword').val(data.UserPassword);
                $('#ddlUserRole').val(data.UserRoleId);
                $('#ddlUserStatus').val(data.UserStatusId);
                EnableDisableControls("2");
                LoadUserInfoGrid();

            },
            error: function () {

            }
        });
    }*@


        function Save()
        {
            var object = FormDataAsObject();

            //alert($('#ddlDepartment').val);

            if (CustomerInfoValidation(object)) {

                $.ajax({
                    url: '@Url.Action("CreateOrUpdate", "EmployeeInfo")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {
                        CustomerName: object.CustomerName,
                        ContractNumber: object.ContractNumber,
                        NID: object.NID,
                        EmergencyNumber : object.EmergencyNumber,
                        PresentAddress : object.PresentAddress,
                        PermanentAddress : object.PermanentAddress,

                        //UserName: formObject.UserName,
                        //UserFullName: formObject.UserFullName,
                        //UserPassword: formObject.UserPassword,
                        //UserRoleId: formObject.UserRoleId,
                        //UserStatusId: formObject.UserStatus,
                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                            ResetForm();
                            //LoadUserInfoGrid();

                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);
                        }
                    },
                    error: function () {
                    }
                });
            }
        }

        @*function Update()
        {
            var formObject = FormDataAsObject();

            if (EmployeeInfoValidation(formObject)) {

                $.ajax({
                    url: '@Url.Action("Update", "UserInfo")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {
                        UserName: formObject.UserName,
                        UserFullName: formObject.UserFullName,
                        UserPassword: formObject.UserPassword,
                        UserRoleId: formObject.UserRoleId,
                        UserStatusId: formObject.UserStatus,
                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                            ResetForm();
                            LoadUserInfoGrid();

                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);

                        }
                    },
                    error: function () {

                    }
                });

            }

        }*@

        @*function Delete()
        {
            var formObject = FormDataAsObject();

            $.ajax({
                url: '@Url.Action("Delete", "UserInfo")',
                method: 'post',
                dataType: 'json',
                async: false,
                data: {
                    userName: formObject.UserName,
                },
                success: function (data) {
                    var vmMsg = data;
                    if (vmMsg.MessageType == 1) {
                        ShowNotification(1, vmMsg.ReturnMessage);
                        ResetForm();
                        LoadUserInfoGrid();

                    } else {
                        ShowNotification(3, vmMsg.ReturnMessage);

                    }
                },
                error: function () {
                }
            });

        }*@

        //function LoadCombos()
        //{
        //    LoadUserRoleCombo();
        //    LoadUserStatusCombo();
        //}

        @*function LoadUserRoleCombo() {

            $.ajax({
                url: '@Url.Action("GetAllRoles", "UserRole")',
                type: 'Get',
                async: false,
                success: function (responseData) {
                    $('#ddlUserRole').empty();
                    $('#ddlUserRole').get(0).options.length = 0;

                    if (responseData != null) {
                        $("#ddlUserRole").get(0).options[0] = new Option("--Select--", "");
                        $.each(responseData, function (index, item) {
                            $('#ddlUserRole').get(0).options[$('#ddlUserRole').get(0).options.length] = new Option(item.Text, item.Value);
                        });
                    }

                },
                error: function () {

                }
            });
        }*@


        @*function LoadUserStatusCombo() {

            $.ajax({
                url: '@Url.Action("GetAllUserStatuses", "UserInfo")',
                type: 'Get',
                async: false,
                success: function (responseData) {
                    $('#ddlUserStatus').empty();
                    $('#ddlUserStatus').get(0).options.length = 0;

                    if (responseData != null) {
                        $("#ddlUserStatus").get(0).options[0] = new Option("--Select--", "");
                        $.each(responseData, function (index, item) {
                            $('#ddlUserStatus').get(0).options[$('#ddlUserStatus').get(0).options.length] = new Option(item.Text, item.Value);
                        });
                    }

                },
                error: function () {

                }
            });
        }*@

        function CustomerInfoValidation(formObject) {

            if (!formObject.CustomerName) {
                $('#txtCustomerName').focus();
                ShowNotification('2', 'Customer Name Can not be empty.');
                return false;
            }

            if (!formObject.ContractNumber) {
                $('#txtContractNumber').focus();
                ShowNotification('2', 'Contract No Can not be empty.');
                return false;
            }

            if (!formObject.NID) {
                $('#txtNationalId').focus();
                ShowNotification('2', 'National ID Can not be empty.');
                return false;
            }

            if (!formObject.PresentAddress) {
                $('#txtPresentAddress').focus();
                ShowNotification('2', 'Present Address Can not be empty.');
                return false;
            }

            if (!formObject.PermanentAddress) {
                $('#txtPermanentAddress').focus();
                ShowNotification('2', 'Permanent Address Can not be empty.');
                return false;
            }


            return true;
        }

        @*function isUserExist(userName)
        {
            var exist = true;
            $.ajax({
                url: '@Url.Action("IsUserExist", "UserInfo")',
                type: 'Get',
                async: false,
                data:{userName:userName},
                success: function (responseData) {
                    if (responseData.MessageType == 3) { exist = true } else { exist = false }
                },
                error: function () {
                }
            });

            return exist;

        }*@

    </script>

}

@{
    ViewBag.Title = ":: Product Distribution ::";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var permission = ViewData["Permission"] as PayRoll.Core.Utility.DBManager.Permission;
}

<link href="~/Content/kendo.common.min.css" rel="stylesheet" />

<script src="~/Scripts/kendo.all.min.js"></script>
@*<script src="~/Scripts/kendo.aspnetmvc.min.js"></script>*@
<script src="~/Scripts/Common.js"></script>

<div class="form-horizontal ">
    <fieldset class="content-group">
        @*<legend class="text-bold">Product Setup</legend>*@
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Product Name:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlProductName" name="ddlProductName"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Opening Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtOpeningBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Employee:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlEmployee" name="ddlEmployee"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Opening Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtEmpOpeningBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Target Amount:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtTargetAmount" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Current Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtCurrentBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-2">
                </div>
                <div class="col-lg-10">
                    <div class="form-group">
                        <div class="col-lg-10">
                            <button class="btn btn-info" data-style="expand-left" id="btnAdd" type="button" onclick="Add()"> Add</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*----------------------------Data Save Method-------------------------------*@


        <div class="form-group">
            <label class="control-label col-lg-2"> </label>
            <div class="col-lg-10">
                @if (permission.CanSave == "1")
                {
                    <button class="btn btn-info" data-style="expand-left" id="btnSave" type="button" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save</button>
                }
                @if (permission.CanUpdate == "1")
                {
                    <button class="btn bg-teal" data-style="expand-left" id="btnUpdate" type="button" onclick="Update()"><i class="fa fa-save"></i>&nbsp; Update</button>
                }
                @if (permission.CanDelete == "1")
                {
                    <button class="btn btn-danger" data-style="expand-left" id="btnDelete" type="button" onclick="Delete()"><i class="icon-trash"></i>&nbsp; Delete</button>
                }
            </div>
        </div>
    </fieldset>

    <fieldset class="content-group">
        <legend>Employee Target Setup</legend>
        <div id="example">
            <div id="grid"></div>
        </div>
    </fieldset>
</div>

@section scripts
{
    <script type="text/javascript">
        _serverDate = null;

        $(document).ready(function () {
            LoadProduct();
            LoadSupplier();

            $("#grid").kendoGrid().empty();
            var result = CallAjax_POST('GetEmployee/EmployeeInfo', '', false, false)
            if (result.length > 0) {
                PopulateGridView(result);
            } else {
                alert("Error! Please Contact..");
            }

            function PopulateGridView(result) {
                $("#grid").kendoGrid({
                    dataSource: result,
                    pageable: true,
                    filterable: true,
                    pageSize: 20,
                    pageable: true,
                    pageable: {
                        input: false,
                        numeric: true,
                        butonCount: 5,
                        pageSize: 20,
                        alwaysVisible: true,
                        previousNext: true,
                        serverPaging: true,
                        serverFiltering: true,
                    },
                    selectable: true,
                    search: {
                        fields: [
                            { name: "EmployeeId", operator: "eq" },
                            { name: "EmployeeName", operator: "contains" },
                            { name: "FatherName", operator: "contains" },
                            { name: "MotherName", operator: "contains" },
                        ]
                    },
                    columns: [

                        { field: "EmployeeId", title: "Employee Id", filterable: true, filterable: { multi: true, search: true }, width: "70px" },
                        { field: "GLAccountNo", title: "Account No", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "NationalId", title: "National Id", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "ContractNumber", title: "Contract Number", filterable: true, filterable: { multi: true, search: true }, width: "90px" },
                        { field: "EmployeeName", title: "Employee Name", filterable: true, filterable: { multi: true, search: true }, width: "120px" },
                        { field: "FatherName", title:"Father's Name", filterable: true, filterable: { multi: true, search: true }, width: "120px" },
                        { field: "MotherName", title: "Mother's Name", filterable: { multi: true, search: true }, width: "120px" },
                        { field: "Select ", title: "Action", filterable: false, width: "50px", template: "<button type='button' class='btn btn-success btn-sm' id='btnEdit'>Select</button>" }
                    ],

                });
            }
        });

    function FormDataAsObject() {
        var object = new Object();
        object.EmployeeName = $('#txtEmployeeName').val();
        object.ContractNumber = $('#txtContractNumber').val();
        object.NationalId = $('#txtNationalId').val();
        object.EmergencyNumber = $('#txtEmergencyNumber').val();
        object.GenderId = $('#ddlGender').val();
        object.FatherName = $('#txtFatherName').val();
        object.MaritalStatus = $('#ddlMaritalStatus').val();
        object.MotherName = $('#txtMotherName').val();
        object.DeptId = $('#ddlDepartment').val();
        object.PresentAddress = $('#txtPresentAddress').val();
        object.DesignationId = $('#ddlDesignation').val();
        object.PermanentAddress = $('#txtPermanentAddress').val();
        object.DateOfBirth = $('#txtDateOfBirth').val();
        object.BloodGroup = $('#ddlBloodGroup').val();

        return object;
    }

    function ResetForm() {
        $('#txtEmployeeName').val('');
        $('#txtContractNumber').val('');
        $('#txtNationalId').val('');
        $('#txtEmergencyNumber').val('');
        $('#ddlGender').val('');
        $('#txtFatherName').val('');
        $('#ddlMaritalStatus').val('');
        $('#txtMotherName').val('');
        $('#ddlDepartment').val('');
        $('#txtPresentAddress').val('');
        $('#ddlDesignation').val('');
        $('#txtPermanentAddress').val('');
        $('#txtDateOfBirth').val('');
        $('#ddlBloodGroup').val('');
        $('#txtDateOfBirth').val('');

        EnableDisableControls("1");
    }

    function EnableDisableControls(status) {
        if (status == "1") {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', true);
            $('#btnDelete').prop('disabled', true);
        }
        else if (status == "2") {
            $('#btnSave').prop('disabled', true);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }

        else {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }
    }

        function Save()
        {
            var object = FormDataAsObject();
            debugger;

            if (EmployeeInfoValidation(object)) {

                $.ajax({
                    url: '@Url.Action("CreateOrUpdate", "EmployeeInfo")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {
                        EmployeeName: object.EmployeeName,
                        ContractNumber: object.ContractNumber,
                        NationalId: object.NationalId,
                        EmergencyNumber : object.EmergencyNumber,
                        GenderId : object.GenderId,
                        FatherName : object.FatherName,
                        MaritalStatus : object.MaritalStatus,
                        MotherName : object.MotherName,
                        DeptId : object.DeptId,
                        PresentAddress : object.PresentAddress,
                        DesignationId : object.DesignationId,
                        PermanentAddress : object.PermanentAddress,
                        DateOfBirth: object.DateOfBirth,
                        BloodGroup: object.BloodGroup,

                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                            ResetForm();
                            //LoadUserInfoGrid();
                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);
                        }
                    },
                    error: function () {
                    }
                });
            }
        }

        function EmployeeInfoValidation(formObject) {

            if (!formObject.EmployeeName) {
                $('#txtEmployeeName').focus();
                ShowNotification('2', 'Employee Name Can not be empty.');
                return false;
            }

            if (!formObject.ContractNumber) {
                $('#txtContractNumber').focus();
                ShowNotification('2', 'Contract No Can not be empty.');
                return false;
            }

            if (!formObject.NationalId) {
                $('#txtNationalId').focus();
                ShowNotification('2', 'National ID Can not be empty.');
                return false;
            }
            if (!formObject.DeptId) {
                $('#ddlDesignation').focus();
                ShowNotification('2', 'Department Can not be empty.');
                return false;
            }
            if (!formObject.PresentAddress) {
                $('#txtPresentAddress').focus();
                ShowNotification('2', 'Present Address Can not be empty.');
                return false;
            }

            if (!formObject.PermanentAddress) {
                $('#txtPermanentAddress').focus();
                ShowNotification('2', 'Permanent Address Can not be empty.');
                return false;
            }


            return true;
        }


        function LoadProduct() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/EmployeeInfo/LoadMaritalStatus",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlMaritalStatus").empty();
                    $("#ddlMaritalStatus").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {
                        $("#ddlMaritalStatus").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });

        }

        function LoadSupplier() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/EmployeeInfo/LoadBloodGroup",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlBloodGroup").empty();
                    $("#ddlBloodGroup").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {
                        $("#ddlBloodGroup").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });

        }


    </script>

}

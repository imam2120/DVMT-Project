@{
    ViewBag.Title = ":: Product Distribution ::";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var permission = ViewData["Permission"] as PayRoll.Core.Utility.DBManager.Permission;
}

<link href="~/Content/kendo.common.min.css" rel="stylesheet" />

<script src="~/Scripts/kendo.all.min.js"></script>
@*<script src="~/Scripts/kendo.aspnetmvc.min.js"></script>*@
<script src="~/Scripts/Common.js"></script>

<div class="form-horizontal ">
    <fieldset class="content-group">
        @*<legend class="text-bold">Product Setup</legend>*@
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Product Name:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlProductName" name="ddlProductName"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Opening Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtOpeningBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Employee:</label>
                        <div class="col-lg-5">
                            <select class="form-control" id="ddlEmployee" name="ddlEmployee"></select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Opening Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtEmpOpeningBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Target Amount:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtTargetAmount" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label class="control-label col-lg-3">Current Balance:</label>
                        <div class="col-lg-5">
                            <input type="text" id="txtCurrentBalance" readonly="readonly" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-12">
                <div class="col-lg-2">
                </div>
                <div class="col-lg-10">
                    <div class="form-group">
                        <div class="col-lg-10">
                            <input type="text" id="txtLastTransNo" hidden="hidden" class="form-control">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*----------------------------Data Save Method-------------------------------*@


        <div class="form-group">
            <label class="control-label col-lg-2"> </label>
            <div class="col-lg-10">
                @*<button class="btn btn-info" data-style="expand-left" id="btnAdd" type="button" onclick="Add()"> Add</button>*@
                @if (permission.CanSave == "1")
                {
                    <button class="btn btn-info" data-style="expand-left" id="btnSave" type="button" onclick="Save()"><i class="fa fa-save"></i>&nbsp; Save</button>
                }
                @if (permission.CanUpdate == "1")
                {
                    <button class="btn bg-teal" data-style="expand-left" id="btnUpdate" type="button" onclick="Update()"><i class="fa fa-save"></i>&nbsp; Update</button>
                }
                @if (permission.CanDelete == "1")
                {
                    <button class="btn btn-danger" data-style="expand-left" id="btnDelete" type="button" onclick="Delete()"><i class="icon-trash"></i>&nbsp; Delete</button>
                }
            </div>
        </div>
    </fieldset>

    <fieldset class="content-group">
        <legend>Employee Target Setup</legend>
        <div id="example">
            <div id="grid"></div>
        </div>
    </fieldset>
</div>

@section scripts
{
    <script type="text/javascript">
        _serverDate = null;

        $(document).ready(function () {
            GetLastTransaction();
            LoadProduct();
            LoadEmployee();            
            GridDataLoad();

        });

        function GridDataLoad() {

            $("#grid").kendoGrid().empty();
            var result = CallAjax_POST('GetEmployeeTarget/Distribution', '', false, false)            
            if (result.length > 0) {                
                PopulateGridView(result);
            }
            //else {
            //    alert("Error! Please Contact..");                
            //}
        }

        function PopulateGridView(result) {
                $("#grid").kendoGrid({
                    dataSource: result,
                    pageable: true,
                    filterable: true,
                    pageSize: 20,
                    pageable: true,
                    pageable: {
                        input: false,
                        numeric: true,
                        butonCount: 5,
                        pageSize: 20,
                        alwaysVisible: true,
                        previousNext: true,
                        serverPaging: true,
                        serverFiltering: true,
                    },
                    selectable: true,
                    search: {
                        fields: [
                            { name: "ProductAccNo", operator: "eq" },
                            { name: "PrdOpenBalance", operator: "contains" },
                            { name: "ProductAccNo", operator: "contains" },
                        ]
                    },
                    columns: [

                        { field: "ProductAccNo", title: "ProductAccNo", filterable: true, filterable: { multi: true, search: true }, width: "70px" },
                        { field: "PrdOpenBalance", title: "PrdOpenBalance", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "EmpAccNo", title: "Emp Acc No", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "OpeningBalance", title: "Emp Open. Balance", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "TargetAmount", title: "TargetAmount", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "ClosingBalance", title: "ClosingBalance", filterable: true, filterable: { multi: true, search: true }, width: "80px" },
                        { field: "Select ", title: "Action", filterable: false, width: "50px", template: "<button type='button' class='btn btn-success btn-sm' id='btnEdit'>Select</button>" }
                    ],
                    change: function (e) {
                        onChngeUpdateValueSet();
                    }

                });
        }


        function onChngeUpdateValueSet() {
            var grid = $("#grid").data("kendoGrid");
            if (grid.select().length > 0) {
                var selectedItem = grid.dataItem(grid.select());
                if (selectedItem != null) {
                    $('#ddlProductName').val(selectedItem.ProductAccNo);
                    $('#txtOpeningBalance').val(selectedItem.PrdOpenBalance);
                    $('#ddlEmployee').val(selectedItem.EmpAccNo);
                    $('#txtEmpOpeningBalance').val(selectedItem.OpeningBalance);
                    $('#txtTargetAmount').val(selectedItem.TargetAmount);
                    $('#txtCurrentBalance').val(selectedItem.ClosingBalance);
                }
            }
        }

    function FormDataAsObject() {
        var object = new Object();
        object.TransDate = null;
        object.TransNo = $('#txtLastTransNo').val();
        object.ProductAccNo = $('#ddlProductName').val();
        object.PrdOpenBalance = $('#txtOpeningBalance').val();
        object.EmpAccNo = $('#ddlEmployee').val();
        object.OpeningBalance = $('#txtEmpOpeningBalance').val();
        object.TargetAmount = $('#txtTargetAmount').val();
        object.ClosingBalance = $('#txtCurrentBalance').val();

        return object;
    }

    function ResetForm() {
        $('#txtLastTransNo').val('');
        $('#ddlProductName').val('');
        $('#txtOpeningBalance').val('');
        $('#ddlEmployee').val('');
        $('#txtEmpOpeningBalance').val('');
        $('#txtTargetAmount').val('');
        $('#txtCurrentBalance').val('');

        EnableDisableControls("1");
    }

    function EnableDisableControls(status) {
        if (status == "1") {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', true);
            $('#btnDelete').prop('disabled', true);
        }
        else if (status == "2") {
            $('#btnSave').prop('disabled', true);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }

        else {
            $('#btnSave').prop('disabled', false);
            $('#btnUpdate').prop('disabled', false);
            $('#btnDelete').prop('disabled', false);
        }
    }

        function Save()
        {
            var object = FormDataAsObject();
            debugger;

            if (EmployeeInfoValidation(object)) {

                $.ajax({
                    url: '@Url.Action("CreateOrUpdate", "Distribution")',
                    method: 'post',
                    dataType: 'json',
                    async: false,
                    data: {
                        TransDate: object.TransDate,
                        TransNo: object.TransNo,
                        ProductAccNo: object.ProductAccNo,
                        PrdOpenBalance: object.PrdOpenBalance,
                        EmpAccNo: object.EmpAccNo,
                        OpeningBalance: object.OpeningBalance,
                        TargetAmount: object.TargetAmount,
                        ClosingBalance: object.ClosingBalance,

                    },
                    success: function (data) {
                        var vmMsg = data;
                        if (vmMsg.MessageType == 1) {
                            ShowNotification(1, vmMsg.ReturnMessage);
                             ResetForm();
                            GetLastTransaction();

                        } else {
                            ShowNotification(3, vmMsg.ReturnMessage);
                        }
                    },
                    error: function () {
                    }
                });
            }
        }

        function EmployeeInfoValidation(formObject) {

            if (!formObject.ProductAccNo) {
                $('#ddlProductName').focus();
                ShowNotification('2', 'Please Select any Product.');
                return false;
            }

            if (!formObject.TargetAmount) {
                $('#txtTargetAmount').focus();
                ShowNotification('2', 'TargetAmount No Can not be empty.');
                return false;
            }

            if (!formObject.EmpAccNo) {
                $('#ddlEmployee').focus();
                ShowNotification('2', 'Employee Can not be empty.');
                return false;
            }

            return true;
        }

        function LoadProduct() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Distribution/LoadProductName",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlProductName").empty();
                    $("#ddlProductName").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {
                        $("#ddlProductName").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });

        }

        function LoadEmployee() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Distribution/LoadSupplierName",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#ddlEmployee").empty();
                    $("#ddlEmployee").append($("<option></option>").val("-1").html("--Select--"));
                    $.each(data, function (i, item) {
                        $("#ddlEmployee").append($("<option></option>").val(item.Key).html(item.Value));
                    });
                }
            });

        }

        function GetLastTransaction() {
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Distribution/GetLastTransaction",
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtLastTransNo").val(data);
                    $("#txtLastTransNo").hide();
                }
            });

        }

        $('#ddlProductName').on('change', function () {
            debugger;            
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Distribution/LoadProductBalance?ProductId=" + $(this).find(':selected').val(),
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtOpeningBalance").val(data);
                }
            });
        });

        $('#ddlEmployee').on('change', function () {
            debugger;
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Distribution/GetEmployeeBalance?EmployeeCode=" + $(this).find(':selected').val(),
                data: {},
                async: false,
                dataType: "json",
                success: function (data) {
                    $("#txtEmpOpeningBalance").val(data);
                }
            });
        });

        $('#txtTargetAmount').on('input', function () {

            $('#txtCashAmount').val('');
            $('#txtDueAmount').val('');

            var a = parseInt($('#txtEmpOpeningBalance').val());
            var b = parseInt($('#txtTargetAmount').val());

            $('#txtCurrentBalance').val(a + b);

        });




    </script>

}
